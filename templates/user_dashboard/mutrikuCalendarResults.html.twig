{% extends 'base_fluid_user.html.twig' %}

{% block navBarSectionTitle %}<a href="{{ path('user_mutriku') }}">MUTRIKU</a>{% endblock %}

{% block stylesheets %}
    {{ parent() }}

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fullcalendar/core@4.1.0/main.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@4.1.0/main.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@4.1.0/main.min.css">
    <link href="/assets/css/common.css" rel="stylesheet">
{% endblock %}


{% block nabBarLeftContent %}


    {% endblock %}


    {% block content %}

        <div class="page-loader" style="display: none">
            <div class="loader">
                <span>{% trans %}CARGANDO{% endtrans %}...</span>
                <span class="dot dot_1"></span>
                <span class="dot dot_2"></span>
                <span class="dot dot_3"></span>
                <span class="dot dot_4"></span>
                <br /><br /><br />
                <span class="align-content-center text-center"><a id="closeLoader" href="#"> {% trans %}Cerrar{% endtrans %}</a></span>
            </div>

        </div>

        <div id="downloadIcon">
            <form method="post" action="/user/dashboard/mutriku/zipdownload" id="filesForm">
                <input type="hidden" name="filesToDownload" id="filesToDownload">
                <i class="glyphicon glyphicon-download-alt"></i>
            </form>
        </div>

        <div class="row">
            <div id="calendar-holder" class="col-10"></div>
            <div id="" class="col-2">
                <h5>{% trans %}Listado de decargas{% endtrans %}</h5>
                <hr />
                <ul class="list-group" id="downloadsList">

                </ul>

            </div>
        </div>


    {% endblock %}


    {% block javascripts %}
        {{ parent() }}

        <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@4.1.0/main.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/interaction@4.1.0/main.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@4.1.0/main.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@4.1.0/main.min.js"></script>

        <script type="text/javascript">
            document.addEventListener('DOMContentLoaded', () => {
                var calendarEl = document.getElementById('calendar-holder');

                var current_locale = '{{ app.request.getLocale() }}';

                var calendar = new FullCalendar.Calendar(calendarEl, {

                    locale: current_locale,
                    eventClick: function (info) {
                        // alert('Event: ' + info.event.title);
                        // alert('Id: ' + info.event.id);
                        addDownload(info.event.id, info.event.title);

                        // change the border color just for fun
                        // info.el.style.borderColor = 'red';
                        return false;
                    },
                    defaultView: 'dayGridMonth',
                    editable: true,
                    eventSources: [
                        {
                            url: "{{ path('fc_load_events') }}",
                            method: "POST",

                            extraParams: {
                                filters: JSON.stringify({})
                            },
                            failure: () => {
                                alert("There was an error while fetching FullCalendar!");
                            },
                        },
                    ],
                    header: {
                        left: 'prev,next',
                        center: 'title',
                    //    right: 'dayGridMonth,timeGridWeek,timeGridDay',
                       right: '',
                    },
                    plugins: ['interaction', 'dayGrid', 'timeGrid'], // https://fullcalendar.io/docs/plugin-index
                    timeZone: 'UTC',
                });
                calendar.render();
            });


            Array.prototype.remove = function() {
                var what, a = arguments, L = a.length, ax;
                while (L && this.length) {
                    what = a[--L];
                    while ((ax = this.indexOf(what)) !== -1) {
                        this.splice(ax, 1);
                    }
                }
                return this;
            };
            var filesToDownload = [];

            function addDownload(id,filename) {

                $("#downloadsList").append('<li id="file'+id+'" class="list-group-item d-flex justify-content-between align-items-center">'+filename+'<span class="badge badge-primary badge-pill removeElement" onclick="removeDownload('+id+')" ><i class="glyphicon glyphicon-remove"></i></span></li>');
                filesToDownload.push(id);
            }


            function removeDownload (id){
                $('#file'+id).remove();
                filesToDownload = filesToDownload.filter(x => x != id);
            }



        </script>


        <script>
            $(function () {

                $("#closeLoader").click(function (event) {
                    $('.page-loader').hide();
                });

                $("#downloadIcon").click(function (event) {
                    event.preventDefault();

                    $('.page-loader').show();

                    // var datos = {
                    //     filesToDownload: filesToDownload
                    // }
                    $('#filesToDownload').val(filesToDownload);

                    $("#filesForm").submit(); // Submit the form
                    return false;

                    url: '/user/dashboard/mutriku/zipdownload',

                        $.ajax({
                            url: '/user/dashboard/mutriku/zipdownload',
                            type: 'POST',
                            data: datos,
                            dataType: 'binary',
                            xhrFields: {
                                'responseType': 'blob'
                            },
                        }).done(function (data, textStatus, request) {

                            var blob = new Blob([data]);

                            // the file name from server.

                            if (window.navigator && window.navigator.msSaveOrOpenBlob) { // for IE
                                window.navigator.msSaveOrOpenBlob(blob, fileName);
                            } else { // for others
                                var url = window.URL.createObjectURL(blob);
                                const a = document.createElement('a');
                                a.style.display = 'none';
                                a.href = url;
                                a.download = 'files.zip';
                                document.body.appendChild(a);
                                a.click();
                                window.URL.revokeObjectURL(url);


                            }

                        }).then(function () {


                        })

                });

            });


        </script>


    {% endblock %}
