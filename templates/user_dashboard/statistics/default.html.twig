{% extends 'base_fluid_user.html.twig' %}

{% block navBarSectionTitle %}<a href="{{ path('user_mutriku') }}">MUTRIKU</a>{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="/assets/css/common.css" rel="stylesheet">


{% endblock %}

{% block nabBarLeftContent %}
    <form name="searchstatistics" method="post" action="{{ path('user_mutriku') }}" class="form-inline">

        <div class="input-group mb-2 mr-2">
            <select name="formTurbines" class="form-control mr-2" id="formTurbines">
                {% for oneTurbine in turbines %}
                    {% set selected = '' %}
                    {% if oneTurbine.id == selectedTurbine %}
                        {% set selected = 'selected' %}
                    {% endif %}
                    <option value="{{ oneTurbine.id }}" {{ selected }}>{{ oneTurbine.position }}</option>
                {% endfor %}
            </select>
        </div>

        <div class="input-group mb-2 mr-2">
            <input type="hidden" name="daterange" id="daterange" value="" required="required" />
            <div id="reportrange" class="form-control"
                 style="cursor: pointer;">
                <span id="selectedDates" style="display: none"></span>
                <i class="glyphicon glyphicon-calendar">{% trans %}Fechas{% endtrans %}</i>&nbsp;
                <span></span> <i class="fa fa-caret-down"></i>
            </div>
        </div>

        <div class="input-group mb-2 mr-2">
            <select name="fieldType" class="form-control select2-search--inline form-control-lg"
                    id="fieldType">
{#                <option value="active_current_a">{% trans %}Corriente activa{% endtrans %}</option>#}
{#                <option value="automatic">{% trans %}Modo funcionamiento{% endtrans %}</option>#}
{#                <option value="av_power1min_w">{% trans %}Potencia media 1 min{% endtrans %} (W)</option>#}
{#                <option value="av_power5min_w">{% trans %}Potencia media 5 min{% endtrans %} (W)</option>#}
{#                <option value="damper_actual_position_deg">{% trans %}Posición válvula{% endtrans %}</option>#}
{#                <option value="drive_healthy">{% trans %}Disponible / operativo{% endtrans %}</option>#}
{#                <option value="motor_rpm">{% trans %}Velocidad de giro{% endtrans %} (rpm)</option>#}
{#                <option value="ouput_voltage_v">{% trans %}Tensión{% endtrans %} (V)</option>#}
{#                <option value="output_frequency_hz">{% trans %}Frecuencia{% endtrans %} (Hz)</option>#}
                <option value="power_k_w">{% trans %}Potencia activa{% endtrans %}</option>
{#                <option value="pressure_pa">{% trans %}Presión cámara{% endtrans %}</option>#}
{#                <option value="reactive_current_a">{% trans %}Corriente reactiva{% endtrans %} (Ar)</option>#}
                <option value="rmspressure_pa">{% trans %}Presión Media{% endtrans %} (Pa)</option>
{#                <option value="vibration_mmps">{% trans %}Vibraciones{% endtrans %} (mmps)</option>#}
{#                <option value="flow1_pa">{% trans %}Caída de presión{% endtrans %} (Pa)</option>#}
{#                <option value="flow2_pa">{% trans %}Caída de presión{% endtrans %} (Pa)</option>#}
{#                <option value="wstatic_pressure_pa">{% trans %}Presión de salida{% endtrans %} (Pa)</option>#}
{#                <option value="temperature1">{% trans %}Temperatura generador{% endtrans %} (ºC)</option>#}
{#                <option value="waterlevel">{% trans %}Nivel de agua{% endtrans %}</option>#}
            </select>
        </div>

        <div class="input-group mb-2 mr-1">
            <button type="submit" class="btn btn-primary">{% trans %}Enviar{% endtrans %}</button>
        </div>


    </form>
{% endblock %}


{% block content %}
    <div class="container_charts">


        <div class="charts_content row">

            <div class="col_chart charts_col_left col-6">
                <p class="header_col"></p>

                <div class="title-selector">
                    <div class="title-day">
{#                        <p class="chart_title">Presión</p>#}
{#                        <p class="day-info" data-type="pressure">{{ period }}</p>#}
                    </div>
                </div>

                <div class="chart_content presure">
                    <div class="chart_left">
                        <div class="chart_detail p-4 text-center border-bottom align-middle">
                            <p class="title" style="color: #F03861; border-color: #F03861;">MAX</p>
                        </div>
                    </div>

                    <div class="chart_right">
                        <div class="chart" id="chart" style="overflow: hidden;" data-highcharts-chart="5"></div>
                    </div>
                </div>

            </div>


            <div class="col_chart charts_col_right col-6">
                <p class="header_col"></p>

                <div class="title-selector">
                    <div class="title-day">
{#                        <p class="chart_title">Presión Media</p>#}
{#                        <p class="day-info" data-type="sound">{{ period }}</p>#}
                    </div>
                </div>

                <div class="chart_content sound">
                    <div class="chart_left">
                        <div class="chart_detail_solo p-4 text-center align-middle">
                            <p class="title" style="color: #6D42C7; border-color: #6D42C7;">MEDIA</p>
                        </div>
                    </div>
                    <div class="chart_right">
                        <div class="chart" id="chart5" data-highcharts-chart="6"></div>
                    </div>
                </div>

            </div>


        </div>
    </div>

{% endblock %}
{% block javascripts %}
    {{ parent() }}

    <script src="/assets/Highcharts-8.1.0/code/highcharts.js"></script>
    <script src="/assets/Highcharts-8.1.0/code/modules/series-label.js"></script>
    <script src="/assets/Highcharts-8.1.0/code/modules/exporting.js"></script>
    <script src="/assets/Highcharts-8.1.0/code/modules/export-data.js"></script>
    <script src="/assets/Highcharts-8.1.0/code/modules/accessibility.js"></script>


    <script>
        $(document).ready(function () {


            {%  if selectedDaterange %}
                $('#formTurbines').val('{{ selectedTurbine }}');
                $('#fieldType').val('{{ selectedFieldType }}');
                $('#selectedDates').text('{{ selectedDaterange }}');
                $('#selectedDates').show();
            {% else %}
            $('#formTurbines').val('{{ turbines[0].id }}');
            {% endif %}


            $('#reportrange').daterangepicker({
                opens: 'right',
                locale: {
                    cancelLabel: 'Vaciar',
                    separator: "-",
                    applyLabel: "Aplicar",
                    fromLabel: "Desde",
                    toLabel: "Hasta",
                    customRangeLabel: "Personalizado",
                    weekLabel: "S",
                    daysOfWeek: [
                        "Do",
                        "Lu",
                        "Ma",
                        "Mi",
                        "Ju",
                        "Vi",
                        "Sá"
                    ],
                    monthNames: [
                        "Enero",
                        "Febrero",
                        "Marzo",
                        "Abil",
                        "Mayo",
                        "Junio",
                        "Julio",
                        "Agosto",
                        "Septiembre",
                        "Octubre",
                        "Noviembre",
                        "Diciembre"
                    ],
                    firstDay: 1,

                },
                autoUpdateInput: false,
                autoApply: true
            }, function (start, end, label) {
                console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
                $('#selectedDates').text(start.format('YYYY-MM-DD') + ' a ' + end.format('YYYY-MM-DD'));
                $('#selectedDates').show();
                $('.glyphicon, .fa-caret-down').remove();
            });


            $('#reportrange').on('apply.daterangepicker', function (ev, picker) {
                $('#daterange').val(picker.startDate.format('YYYY/MM/DD') + ' - ' + picker.endDate.format('YYYY/MM/DD'));
            });

            $('#reportrange').on('cancel.daterangepicker', function (ev, picker) {
                $('#daterange').val('');
            });


            {%  if selectedDaterange %}
            //change the selected date range of that picker
            $('#daterange').val('{{ selectedDaterange }}');
            $('#selectedDates').text(start.format('YYYY-MM-DD') + ' a ' + end.format('YYYY-MM-DD'));
            $('#selectedDates').show();
            {% endif %}





        });
    </script>


    <script>
        var count = 0;
        var categoriesHoras = [
            {% for hora in horas %}
            '{{ hora }}'
            {% if not loop.last %},{% endif %}
            {% endfor %}
        ];
        {% if numPresiones > 0 %}
        var pressure = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        var maxPressureArray = [{{ maximos|join(', ') }}];
        var minPressureArray = [{{ medias|join(', ') }}];
        {% else %}
        var pressure = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        var maxPressureArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        var minPressureArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        {% endif %}


        {% if numPresiones > 0 %}
        var soundPressureArray = [{{ average|join(', ') }}];
        var aveSoundPressureArray = [{{ arrayAverage|join(', ') }}];
        var aveSoundPressure = {{ totalAverage }};
        {% else %}
        var soundPressureArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        var aveSoundPressureArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        var aveSoundPressure = 0;
        {% endif %}

        var categoriesMes = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
            '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',
            '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'];

        var categoriesAño = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

        var categories = categoriesHoras;

        var pressureText = 'Presión';
        console.log(pressureText);
        var minPressureText = 'Presión MIN';
        var maxPressureText = 'Presión MAX';

        var elevationText = "Elevation";
        var minElevationText = "MIN Elevation";
        var maxElevationText = "MAX Elevation";

        var powerText = "Power";
        var avePowerText = "AVG Power";
        var maxPowerText = "MAX Power";

        var productionText = "Production";

        var soundPressureText = 'Presión Eficaz';
        var aveSoundPressureText = 'Presión Media';

        $(document).ready(function () {


            $('.presure-max').text(maxPressure + ' Pa');
            $('.presure-min').text(minPressure + ' Pa');


            $('.sound-average').text(aveSoundPressure + ' Pa');

            if ($('#chart').length) {
                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: 'chart',
                        type: 'spline',
                    },

                    title: {
                        text: ''
                    },

                    subtitle: {
                        text: ''
                    },

                    legend: {
                        enabled: false
                    },

                    exporting: {
                        enabled: false
                    },

                    xAxis: {
                        categories: categories
                    },

                    yAxis: {
                        title: {
                            text: ''
                        },
                        //min : 0
                    },

                    tooltip: {
                        formatter: function () {
                            return '<b>' + this.series.name + '</b><br/>' +
                                Highcharts.dateFormat('%e. %b', this.x) + ': ' + this.y + ' Pa';
                        }
                    },

                    plotOptions: {

                        area: {
                            lineWidth: 1.5,
                            marker: {
                                enabled: true,
                                symbol: 'circle',
                                radius: 3,
                                states: {
                                    hover: {
                                        enabled: true,
                                        radius: 5
                                    }
                                }
                            },

                            shadow: false,
                            states: {
                                hover: {
                                    lineWidth: 1.5
                                }
                            }
                        }
                    },

                    series: [
                        /*{
                            name : pressureText,
                            color: '#5e88fc',
                            type : "area",
                            fillColor : {
                                linearGradient : [0, 0, 0, 300],
                                stops : [
                                [0, 'rgba(94,136,252,0.6)'],
                                [1, 'rgba(94,136,252,0)']
                                ]
                            },
                            marker: {
                                width: 5,
                                height: 5
                            },
                            // Define the data points. All series have a dummy year
                            // of 1970/71 in order to be compared on the same x axis. Note
                            // that in JavaScript, months start at 0 for January, 1 for February etc.
                            data : //[ 31, 40, 33, 46, 48, 53, 67, 45, 51, 43, 60, 52 , 31, 40, 33, 46, 48, 53, 67, 45, 51, 43, 60, 52 ]
                                    pressure
                        },*/ {
                            name: minPressureText,
                            color: '#3498DB',
                            type: "area",
                            //dashStyle: 'longdash',
                            fillColor: {
                                color: '#3498DB',
                                // linearGradient : [0, 0, 0, 300],
                                // stops : [
                                //	 [0, 'rgba(255,112,67,0.8)'],
                                //	 [1, 'rgba(255,112,67,0)']
                                // ]
                            },
                            marker: {
                                width: 5,
                                height: 5/*,
							enabled: false*/
                            },
                            data: minPressureArray
                        },
                        {
                            name: maxPressureText,
                            color: '#F03861',
                            type: "area",
                            //dashStyle: 'longdash',
                            fillColor: {
                                color: '#F03861',
                                // linearGradient : [0, 0, 0, 300],
                                // stops : [
                                //	 [0, 'rgba(255,112,67,0.8)'],
                                //	 [1, 'rgba(255,112,67,0)']
                                // ]
                            },
                            marker: {
                                width: 5,
                                height: 5/*,
							enabled: false*/
                            },
                            data: maxPressureArray
                        }
                    ]
                });
            }

            if ($('#chart5').length) {
                chart5 = new Highcharts.Chart({
                    chart: {
                        renderTo: 'chart5',
                        type: 'spline',
                    },

                    title: {
                        text: ''
                    },

                    subtitle: {
                        text: ''
                    },

                    legend: {
                        enabled: false
                    },

                    exporting: {
                        enabled: false
                    },

                    xAxis: {
                        // type : '',
                        // dateTimeLabelFormats : { // don't display the dummy year
                        // 	month : '%e. %b',
                        // 	year : '%b'
                        // }
                        categories: categories
                    },

                    yAxis: {
                        title: {
                            text: ''
                        },
                        //min : 0
                    },

                    tooltip: {
                        formatter: function () {
                            return '<b>' + this.series.name + '</b><br/>' +
                                Highcharts.dateFormat('%e. %b', this.x) + ': ' + this.y + ' Pa';
                        }
                    },

                    plotOptions: {
                        area: {
                            lineWidth: 1.5,
                            marker: {
                                enabled: true,
                                symbol: 'circle',
                                radius: 3,
                                states: {
                                    hover: {
                                        enabled: true,
                                        radius: 5
                                    }
                                }
                            },

                            shadow: false,
                            states: {
                                hover: {
                                    lineWidth: 1.5
                                }
                            }
                        }
                    },

                    series: [
                        {
                            name: soundPressureText,
                            color: '#5e88fc',
                            type: "area",
                            fillColor: {
                                linearGradient: [0, 0, 0, 300],
                                stops: [
                                    [0, 'rgba(94,136,252,0.6)'],
                                    [1, 'rgba(94,136,252,0)']
                                ]
                            },
                            marker: {
                                width: 5,
                                height: 5,
                            },
                            // Define the data points. All series have a dummy year
                            // of 1970/71 in order to be compared on the same x axis. Note
                            // that in JavaScript, months start at 0 for January, 1 for February etc.
                            data: soundPressureArray

                        },
                        {
                            name: aveSoundPressureText,
                            color: '#6D42C7',//'#6D42C7',
                            type: "area",
                            dashStyle: 'longdash',
                            fillColor: {
                                color: '#6D42C7',//'#6D42C7',
                                // linearGradient : [0, 0, 0, 300],
                                // stops : [
                                //	 [0, 'rgba(255,112,67,0.8)'],
                                //	 [1, 'rgba(255,112,67,0)']
                                // ]
                            },
                            marker: {
                                width: 5,
                                height: 5,
                                enabled: false
                            },
                            data: aveSoundPressureArray
                        }]
                });
            }

        });
    </script>

{% endblock %}
